# todo

* generating all ICE in the matrix should append codes to the ICE names - string.format("%x%d",10,9)

# replayability

The game is can become repetitive, to address replayability:

* bring in new software as the game progresses. currently all software is available from the start.
* change contract descriptions as the game progresses.
* add new contract goals.
* add new node types with new matrix actions.
* add campaigns that follow a plot via multiple missions. these can have longer due dates: expose a political watershed before the election, or stop a mega corp from rolling out their new OS that will undermine society.
* redirect ICE to the wrong node (false alarm)
* consider: side/mini games as actions for new node types
* study at an online college to pass time, with a chance of revealing a new skill.
* choose a hacker class (warrior/stealth/white hat/black hat). each class has one ability that the others don't have.
* give XP for crashing ICE when the ICE entry node is deactivated (encourages combat)
* give XP for completing a mission without attacking or setting off any alert - cancelling an alert does not count (encourages stealth)
* stun attacks (for combat variety)
* the reflect software may be overpowered. limit it to a reasonable range.
* gateways that are locked, requiring a red, green or blue key to open.

# new missions

* Kill a target ICE
* kill all ICE in system
* Deactivate the I/O node that spawns ICE
* download all files in a data node or system

# list of original source files

## done
Program.cpp
Program.h
Decker.h
Decker.cpp

## wip
Character.cpp
Character.h
Ice.cpp
Ice.h

## todo
Area.cpp  -- system>areas>nodes (only larger systems has multiple areas)
Area.h
Node.cpp
Node.h
System.cpp
System.h
IceDataDlg.cpp
IceDataDlg.h
ShopItem.cpp
ShopItem.h
ActiveBar.cpp
ActiveBar.h
AlarmBar.cpp
AlarmBar.h
BuildDialog.cpp
BuildDialog.h
CharDataDialog.cpp
CharDataDialog.h
ClockView.cpp
ClockView.h
Contract.cpp
ContractDataDialog.cpp
ContractDataDialog.h
Contract.h
ContractListDialog.cpp
ContractListDialog.h
CustomButton.cpp
CustomButton.h
DeckDataDialog.cpp
DeckDataDialog.h
DeckerGraphics.cpp
DeckerGraphics.h
DeckerSound.cpp
DeckerSound.h
DSFile.cpp
DSFile.h
EntryDlg.cpp
EntryDlg.h
FileAccessDlg.cpp
FileAccessDlg.h
Global.cpp
Global.h
HealthBar.cpp
HealthBar.h
HomeView.cpp
HOMEVIEW.H
ImageArray.cpp
ImageArray.h
ImageDisplay.cpp
ImageDisplay.h
IntroDlg.cpp
IntroDlg.h
MapView.cpp
MapView.h
MatrixView.cpp
MatrixView.h
MessageView.cpp
MessageView.h
MissionResultsDlg.cpp
MissionResultsDlg.h
NameBar.cpp
NameBar.h
NameDlg.cpp
NameDlg.h
NewCharDlg.cpp
NewCharDlg.h
NewInfo.h
NewProjectDlg.cpp
NewProjectDlg.h
NodeView.cpp
NodeView.h
OptionsDlg.cpp
OptionsDlg.h
OrderDlg.cpp
OrderDlg.h
ProjectDataDlg.cpp
ProjectDataDlg.h
resource.h
RestDlg.cpp
RestDlg.h
Shop.cpp
Shop.h
SoundEditDlg.cpp
SoundEditDlg.h
Source.cpp
Source.h
StdAfx.cpp
StdAfx.h
TransferDlg.cpp
TransferDlg.h
